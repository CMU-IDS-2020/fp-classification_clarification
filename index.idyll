[meta title:"Final Project" description:"Short description of your project" /]

[Header
  fullWidth:true
  title:"Machine Learning Classification"
  authors:`[{
    name: "Laura Howard",
    link: "https://twitter.com/mathisonian"
  }, {
    name: "Christian Deverall",
    link: "https://github.com/kalealex"
  },
  {
    name: "Nathan Jen",
    link: "https://github.com/kalealex"
  },
  {
    name: "Juliette Wong",
    link: "https://github.com/kalealex"
  }]`
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
/]

[section className:'firstSection']

  # A Brief History of Classification  

  [p className:'introSubtitle']Can computers learn from data?[/p]

  [aside]
    [img src:"static/images/machineLearning.png" /]
  [/aside]

  This question led to the development of machine learning.  In 1959, Arthur Samuel (a pioneer computer scientist) 
  defined machine learning as “the field of study that [b] gives computers the ability to learn without being explicitly programmed[/b]”.

  While this may sound complex, we hope to make some machine learning concepts approachable and easy to learn 
  through examples and activities in this article.

[/section]

[section]

  [p className:'introSubtitle']Understanding Algorithms[/p]

  Think of it this way – as you can learn these concepts through experimenting with examples, computers can do the same!

  To grasp how machine learning works, we need to understand [b]algorithms - the method for creating models from data[/b].  
  In this article, we will show you algorithms that perform classification tasks on a famous machine learning dataset.  
  Classification in today’s world is responsible for advancements in speech recognition, face detection, handwriting 
  recognition, and even email spam identification.

[/section]

[section]

  # Case Study 

  [p className:'introSubtitle']Is Income Predictable?[/p]

  [aside]
    [img src:"static/images/machineLearning.png" /]
  [/aside]

  This question led to the development of machine learning.  In 1959, Arthur Samuel (a pioneer computer scientist) 
  defined machine learning as “the field of study that [b] gives computers the ability to learn without being explicitly programmed[/b]”.

  While this may sound complex, we hope to make some machine learning concepts approachable and easy to learn 
  through examples and activities in this article.

[/section]

[section]

  [p className:'introSubtitle']Exploring the dataset[/p]

  This is the data that we are going to use to train our algorithms. 

  (Explain Training)

  (Have visualizations for different variables of the dataset)

  [data name:"train" source:"train_data.csv" /]
  [Table data:train defaultPageSize:5/]


  [IdyllVegaLite data:train spec:`{
    width: 500,
    height: 250,
    renderer: 'svg',
    selection: {
      click: {type: "multi"} 
      },
    mark: "bar",
    encoding: {
     y: {field: "High Income"},
     x: {aggregate: "count", title: "Number of People with High Income"},
     color: {field: "High Income", type: "nominal"},
     opacity: {condition: {selection: "click", value: 1}, value: 0.3},
    }
}` /]

[var name:"colorBy" value:`{}` /]
  Color by:
 [button onClick:`colorBy = {}` ]None[/button]
 [button onClick:`colorBy = {field: 'High Income', type: 'nominal'}` ]High Income[/button]

  [IdyllVegaLite data:train spec:`{
    width: 500,
    height: 250,
    renderer: 'svg',
    mark: "bar",
    encoding: {
     x: {field: "Age", bin: true},
     y: {aggregate: "count", title: "Number of People"},
     color: colorBy
  }
  }` /]

  [IdyllVegaLite data:train spec:`{
    width: 500,
    height: 250,
    renderer: 'svg',
    mark: "bar",
    encoding: {
     x: {field: "Years of Education"},
     y: {aggregate: "count", title: "Number of People"},
     color: colorBy
  }
  }` /]

  [IdyllVegaLite data:train spec:`{
    width: 500,
    height: 400,
    renderer: 'svg',
    mark: "circle",
    encoding: {
      x: {field: "Age", type: "quantitative"},
      y: {field: "Years of Education", type: "quantitative"},
      color: {field: "High Income", type: "nominal"},
      tooltip: {field: "High Income", type: "nominal"}
    }
  }` /]

[/section]

[section]

  [p className:'introSubtitle']Evaluating Your Model[/p]

  After exploring the data, we hope that you got a sense of which patterns or variable values are more likely
  to mean that someone is high income or not. This process was training your own model, and is exactly
  what machine learning models do! However, now that your model is trained, lets put it to the test
  with 3 mystery people.

[/section]

[section]

  [p className:'introSubtitle']Evaluating Your Model[/p]

  [aside]
    [img src:"static/images/mystery-person.png" /]
  [/aside]

  [b]Mystery Person #1:[/b] [br/]
  Age: 57 [br/]
  Years of Education: 15

  [var name:"correct1" value:`false` /]
  [var name:"show1" value:`false` /]
  [Answer correct:correct1 show:show1 /]

  [div className:'btn-row' onClick:`show1 = true`]
    [button className:'evaluate-btn' onClick:`correct1 = true`]High Income[/button]
    [button className:'evaluate-btn' onClick:`correct1 = false`]Low Income[/button]
  [/div]

  [b]Mystery Person #2:[/b] [br/]
  Age: 22 [br/]
  Years of Education: 7

  [var name:"correct2" value:`false` /]
  [var name:"show2" value:`false` /]
  [Answer correct:correct2 show:show2 /]

  [div className:'btn-row' onClick:`show2 = true`]
    [button className:'evaluate-btn' onClick:`correct2 = false`]High Income[/button]
    [button className:'evaluate-btn' onClick:`correct2 = true`]Low Income[/button]
  [/div]

  [b]Mystery Person #3:[/b] [br/]
  Age: 30 [br/]
  Years of Education: 10

  [var name:"correct3" value:`false` /]
  [var name:"show3" value:`false` /]
  [Answer correct:correct3 show:show3 /]

  [div className:'btn-row' onClick:`show3 = true`]
    [button className:'evaluate-btn' onClick:`correct3 = false`]High Income[/button]
    [button className:'evaluate-btn' onClick:`correct3 = true`]Low Income[/button]
  [/div]

[/section]

[Scroller currentStep: caseStudyStep]
    [Graphic className:"d3-component-container"]
      [img src:"static/images/iris.png" /]
    [/Graphic]

  [Step]
    # Case Study

    ## Here is your task:

    You are a high school student in the US wondering if continuing your education will be worth it in the long run to live a comfortable life 
    and pay off your student loans.  To start, you look at US census data and gather real examples of peoples’ age, number of years of education, 
    and what their income is.  You classify income as high if it exceeds $50,000*.

    To complete this task, you will use three commonly used classification algorithms:  

      1. K Nearest Neighbors (KNN)   

      2. Decision Trees  

      3. Logistic Regression.

    Take a look at the data below:
    
      ####### *Data is from the 1994 US census bureau database. $50,000 is worth ~$88k in 2020.
      
  [/Step]
  [/Scroller]

[Scroller currentStep: Overfitting]
  [Graphic className:"d3-component-container"]
    [img src:"static/images/overfitting.png" /]
  [/Graphic]

    
  [Step]
    # Warning: Overfitting

    One thing to pay attention to when using algorithms is overfitting.  
    Overfitting happens when a model is too complex and starts to classify according 
    to a random error in the data over the expected relationships between variables.  
    A model is considered “overfit” when it fits your training data really well, yet performs 
    poorly on new data. One way to identify an “overfit” is to reserve a portion of your data 
    set and introduce it after you are finished creating your model to see how it performs.
  [/Step]

[/Scroller]

[Scroller currentStep: KNN]
  [Graphic className:"d3-component-container"]
    [img src:"static/images/knn.png" /]
  [/Graphic]
  [Step]
    # K Nearest Neighbors (KNN)

    The K Nearest Neighbors (KNN) algorithm classifies data based on data that is most similar.  
    You will use this algorithm to guess income based on similar known data.  

    We can apply this to the dataset, and vary the number of neighbors (K) in our model. 
    When we do so, we see that our model outputs different accuracy levels for both the training 
    data and the test data. 
  [/Step]

  [Step]
    In this example the the right, our “test point” is the red star in the center. when we set K = 3, we 
    see that there are two points near it that are class B, and one that is class A. Since class 
    B is the majority, we label the test point as class B. However, when we set K = 6, 4 of the 
    nearest neighbors to the test point are in class A, while 2 are in class B. Thus, when K = 6, 
    we would label our test point as Class A.
  [/Step]

  [Step]
    We can apply this to the dataset, and vary the number of neighbors (K) in our model. 
    When we do so, we see that our model outputs different accuracy levels for both the training 
    data and the test data. 

    [img src:"static/images/knn2.png" /]
  [/Step]
  [/Scroller]

[Scroller currentStep: DecisionTrees]
  [Graphic className:"d3-component-container"]
    [img src:"static/images/dt.png" /]
  [/Graphic]
  [Step]
    # Decision Trees

    The Decision Tree algorithm splits data according to certain parameters. One can think 
    of this as having a flow-chart like structure, where each data point goes through the tree 
    and is subsequently labeled based on the attributes of the data point.  
  [/Step]
[/Scroller]

[Scroller currentStep: LogisticRegression]
  [Graphic className:"d3-component-container"]
    [img src:"static/images/lr.png" /]
  [/Graphic]
  [Step]
    # Logistic Regression  

    Logistic Regression is a classification algorithm that first finds a linear regression 
    based on the attributes of the data, and then passes that regression output to a sigmoid 
    function to convert it to a probability of whether or not the data point is of a certain class.
  [/Step]

[/Scroller]

[var name:"introStep" value:0 /]
[Scroller currentStep: introStep]
[/Scroller]
